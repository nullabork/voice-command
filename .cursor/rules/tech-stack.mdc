---
description: 
globs: 
alwaysApply: true
---
# Tech Stack Overview

This project uses a Python backend with Flask and a static HTML/JS frontend with Alpine.js.

**Backend:**
- Python with Flask framework
- SQLite3 database for persistence
- Flask-SocketIO for real-time communication
- `speech_recognition` for voice to text
- `pynput` for keyboard control
- Threading for concurrent processing

**Frontend:**
- Static HTML/CSS/JS served by Flask
- Alpine.js for reactive UI components
- Tailwind CSS & DaisyUI for styling
- Socket.IO client for real-time updates

**Architecture:**
- Modular file structure with separation of concerns
- RESTful API + WebSockets for communication
- Automatic error recovery and thread monitoring

See the full tech stack details here: [tech-stack.md](mdc:memory-bank/tech-stack.md)




